{"name": "get请求查询用户数据列表", "status": "passed", "description": "\n        :param case_number: 用例编号\n        :param case_title: 用例标题\n        :param path: 接口路径\n        :param is_token: token操作：写入token/读取token/不携带token\n        :param method: 请求方式：get/post/put/delete....\n        :param parametric_key: 入参关键字：params/data/json\n        :param file_var: 接口中接受文件对象的参数名称\n        :param file_path: 文件路径，单文件实例：/Users/zy7y/PycharmProjects/apiAutoTest/test/__init__.py\n        多文件实例['/Users/zy7y/PycharmProjects/apiAutoTest/test/__init__.py','/Users/zy7y/PycharmProjects/apiAutoTest/test/test_api.py']\n\n        :param parameters: path参数(携带在url中的参数)依赖处理 users/:id(id携带在url中) 实例:{\"case_001\": '$.data.id'}，解析\n        从用例编号为case_001的实际结果响应中提取data字典里面的id的内容(假设提取出来是500), 最后请求的路径将是host + users/500\n\n        :param dependent: data数据依赖，该接口需要上一个接口返回的响应中的某个字段及内容：实例{\"case_001\",[\"$.data.id\",\"$.data.username\"]}\n        解析: 从用例case_001的实际响应结果中提取到data下面的id，与username的值(假设id值为500，username为admin)，那么提取的数据依赖内容将是{\"id\":500, \"username\":\"admin\"}\n        纳闷最终请求的data 将是 {\"id\":500, \"username\":\"admin\"} 与本身的data合并后的内容\n        :param data: 请求数据\n        :param expect:预期结果，最后与config/config.yaml下的response_reg->response提取出来的实际响应内容做对比，实现断言\n        :return:\n        ", "steps": [{"name": "处理相关数据依赖，header", "status": "passed", "start": 1597170419771, "stop": 1597170419773}, {"name": "发送请求，取得响应结果的json串", "status": "passed", "start": 1597170419773, "stop": 1597170419882}, {"name": "将响应结果的内容写入实际响应字典中", "status": "passed", "start": 1597170419883, "stop": 1597170419883}, {"name": "根据配置文件的提取响应规则提取实际数据", "status": "passed", "start": 1597170419883, "stop": 1597170419883}, {"name": "处理读取出来的预期结果响应", "status": "passed", "start": 1597170419883, "stop": 1597170419884}, {"name": "预期结果与实际响应进行断言操作", "status": "passed", "start": 1597170419884, "stop": 1597170419885}], "attachments": [{"name": "stderr", "source": "fab10117-9898-410c-b4b8-e028693ca996-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case_number", "value": "'case_003'"}, {"name": "case_title", "value": "'get请求查询用户数据列表'"}, {"name": "path", "value": "'users'"}, {"name": "is_token", "value": "'读'"}, {"name": "method", "value": "'get'"}, {"name": "parametric_key", "value": "'params'"}, {"name": "file_var", "value": "''"}, {"name": "file_path", "value": "''"}, {"name": "parameters", "value": "''"}, {"name": "dependent", "value": "'{\"case_002\": [\"$.data.id\"],\n\"case_001\":[\"$.meta.msg\",\"$.meta.status\"]}'"}, {"name": "data", "value": "'{\"pagenum\": 1, \"pagesize\": \"12\"}'"}, {"name": "expect", "value": "'{\n\"msg\": \"获取管理员列表成功\", \"status\": 200\n}'"}], "start": 1597170419771, "stop": 1597170419886, "uuid": "db15e3a3-fdd7-4915-b849-a1f809edded9", "historyId": "214100763415559eb35383b0cf146d06", "testCaseId": "25d03e8a28f6fbabf245bcd6f4fa8591", "fullName": "test.test_api.TestApiAuto#test_main[case_003-get请求查询用户数据列表-users-读-get-params----{\"case_002\": [\"$.data.id\"],\n\"case_001\":", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestApiAuto"}, {"name": "host", "value": "win7"}, {"name": "thread", "value": "2900-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_api"}]}